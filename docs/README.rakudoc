=begin pod

=head1 NAME

B<Font::Utils> - Provides routines and programs to interrogate font directories
and individual font files. 

B<NOTE>: The intent is for this module to work on Linux, MacOS, and
Windows.  Please file an issue if you need it on your OS.  The package
requires use of the 'V<PDF::Font::Loader:ver<0.8.8>>' which has recently
been ported to those two systems.

=head1 SYNOPSIS

=begin code :lang<raku>
use Font::Utils;
my $dir = "/usr/share/fonts/opentype/cantarell
font-utils list $dir;
font-utils show $font-file;
font-utils sample $font-file;
=end code

=head1 DESCRIPTION

B<Font::Utils> contains the following installed program and classes and routines:

=head2 Program: B<font-utils>

=begin code
font-utils <mode> [...options...]]
=end code

Modes:

=begin item 
list $directory | @dirs, :$out = $*OUT

Uses routine C<list> to provide a list
of font families and their fonts in the input directories.
=end item

=begin item 
show $file | @files | @dirs, :$out = $*OUT

Uses routine C<show> to provide a list of each
input font's attributes.
=end item

=begin item 
sample @fonts | @dirs, :$text, :$media = 'Letter', :$orientation = 'Portrait',
                       :$linespacing = 16, :$nglyphs, :$out = "sample.pdf"

Uses routine C<sample> to create a PDF document showing each
input font at a default size of 12 points on Letter paper
in Portrait orientation.

If no text is supplied, and no specific number of glyphs is
entered, the sample will show as many glyphs as can be shown
on a single line of the alphanumeric
glyphs in that font.
=end item

=head2 Classes

=begin item
C<class FreeFontFace> {...}>

Contains all the attributes obtained in the C<$face> object created by module
'Font::FreeFont' from a font file.
=end item


=head2 Routines

=begin item
=begin code
sub to-string(
    $cplist, 
    --> Str) is export {...}
=end code

Given a list of hex codepoints, convert them to a string repr
the first item in the list may be a string label
=end item

=begin item
=begin code
sub write-line(
    $page,
    :$font!,  # DocFont object
    :$text!,
    :$x!, :$y!,
    :$align = "left", # left, right, center
    :$valign = "baseline", # baseline, top, bottom
    :$debug,
) is export {
=end code

=end item

=begin item
=begin code
sub rescale(
    $font,
    :$debug,
    --> Numeric
    ) is export {...}
=end code

Given a font object with its size setting (.size) and a string of text you
want to be an actual height X, returns the calculated setting
size to achieve that top bearing.
=end item

=begin item
=begin code
sub hex2dec(
    Str $hex
    --> Numeric
    ) is export {...}
=end code

Converts an input hex string to a decimal number.
=end item

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

Â© 2024 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
